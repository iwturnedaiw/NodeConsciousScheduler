#! /bin/bash

LOG=./log/consecutiveRun_`date +%Y%m%d%H%M`.log

NINT=$1
shift 1
PER="$@"

# configuration
#CASE="n1152c20" # for non-OC
CASE="n150c12" # for non-OC
# for 6500, 5 10 15 20
# for 15913, 20 25 30 35 40
# for 25336, 44 46 55 55 59
# for 34772, 60 65 70 75 80
# for 39473, 70 75 80 85 90

#PER="1 3 5 7 10"
#PER="7"
#PER="0 7 10 12 15 20"
#PER="0 20 25 30 35 40"
#PER="35"
#PER="0"
MEMORY="67108864"
#TP="KIT-FH2-2016-1_only_int KIT-FH2-2016-1_only_batch"
#TP="KIT-FH2-2016-1_only_batch"
#TP="UniLu-Gaia-2014-1_only_batch_minus4756 UniLu-Gaia-2014-1_only_int_plus4756"
#TP="UniLu-Gaia-2014-1_only_batch_minus4756"
#TP="UniLu-Gaia-2014-1_only_batch_minus15953 UniLu-Gaia-2014-1_only_int_plus15953"
#TP="UniLu-Gaia-2014-1_only_int_plus15953"
#TP="UniLu-Gaia-2014-1_int_alloced"
#TP="UniLu-Gaia-2014-1_only_batch"
TP="UniLu-Gaia-2014-1_${NINT}_int_alloced UniLu-Gaia-2014-1_${NINT}_only_batch"
#M="2 3 4 5 6 7 8"
M="1"
#ALGORITHM="FCFS EasyBackfilling"
#ALGORITHM="FCFS"
ALGORITHM="FCFSOC EasyBackfillingOC"

# path
DATADIR=./data-set
RUN_SCRIPT=run.sh
RESULTDIR=./result
MASTER=./master
FILENAME=./test.out
TEMPLATE=template.machines.UniLu-Gaia-2014-1
SH=bash
export CLASSPATH=./build/classes
CONCURRENT=18
SLEEP=2
SSLEEP=1



test() {
  OC_FLAG=0
  CHECK=${ALGORITHM##*OC}
  LEN=${#CHECK}
  if [ ${LEN} -eq 0 ]; then
    OC_FLAG=1
  fi
  cnt=0
  for algorithm in ${ALGORITHM}
  do
    echo ${algorithm}

  for m in ${M}
  do
  echo "M=${m}"
  for tp in ${TP}
  do
    echo ${tp}
    for c in ${CASE}
    do
      for per in ${PER}
      do
        X=$per
        #if [ ${tp#*_} = "only_batch" ]; then
        echo $X
        core=${c#*c}
        node=${c%c*}
        nodeFull=${node#*n}
        node=`bc <<< $nodeFull*$X/100`
        if [[ "${tp}" = *only_batch* ]]; then
          node=$((nodeFull-node))
          echo "in"
        fi
        #echo "\tn${node} c${core}"
        cnt=`jobs | grep Running | wc -l`
        while [ $cnt -ge $CONCURRENT ]
        do
          sleep $SLEEP
          cnt=`jobs | grep Running | wc -l`
        done
        echo -e "\t\t${algorithm}\tM=${m}\t${tp}\t${c}\tStarting...\t"
        ${SH} ./${RUN_SCRIPT} ${tp} ${algorithm} ${node} ${core} ${m} ${memory} > /dev/null 2>&1 &
        sleep $SSLEEP
      done
    done
  done
  done
  done
  wait
}



test 2>&1 | tee -a ${LOG}
